{"version":3,"sources":["services/tokenDataService.js","routes/home/Home.js","components/Title.js","services/loginFactorOneService.js","components/login/LoginFactorOne.js","services/loginFactorTwoService.js","components/login/LoginFactorTwo.js","components/login/LoginContainer.js","routes/login/Login.js","services/registerUserService.js","components/register/RegisterUser.js","services/registerTotpService.js","components/register/RegisterTotp.js","components/register/RegisterContainer.js","routes/register/Register.js","components/apps/AppsList.js","services/connectedAppService.js","services/appService.js","components/apps/AppsContainer.js","routes/apps/Apps.js","components/new-app/authorize-form/AuthorizeForm.js","components/new-app/NewAppContainer.js","routes/apps/new/NewApp.js","routes/oauth-error/OAuthError.js","App.js","index.js"],"names":["checkTokenData","a","fetch","method","credentials","response","ok","json","Home","history","useHistory","t","useTranslation","useState","isLoading","setLoading","email","setEmail","useEffect","then","push","Typography","variant","align","useStyles","makeStyles","title","backgroundColor","paddingTop","paddingBottom","marginBottom","Title","classes","className","Container","loginFactorOne","headers","body","JSON","stringify","LoginFactorOne","onLogin","password","setCredentials","fieldErrors","setFieldErrors","handleCredentialsChange","event","target","id","value","handleSubmit","preventDefault","errors","global","basicToken","onSubmit","Grid","container","spacing","item","xs","TextField","type","label","fullWidth","onChange","error","undefined","helperText","Button","color","size","Alert","severity","onClick","loginFactorTwo","LoginFactorTwo","code","LoginContainer","location","useLocation","setBasicToken","redirect","setRedirect","encodedRedirect","URLSearchParams","search","get","decodeURIComponent","Login","maxWidth","registerUser","RegisterUser","onRegister","React","confirmedPassword","registerTotp","registeredToken","RegisterTotp","registeredData","alignContent","src","qrCodeUrl","alt","totpSecretKey","RegisterContainer","setRegisteredData","Register","AppsList","apps","List","map","app","ListItem","key","clientId","ListItemIcon","KeyboardArrowRight","ListItemText","primary","name","secondary","Date","authorizedTime","toLocaleString","ListItemSecondaryAction","IconButton","edge","aria-label","Delete","getConnectedApps","getAppName","AppsContainer","setApps","Promise","all","nameResponse","appsWithName","Apps","AuthorizeForm","scopeId","sm","window","href","redirectUri","NewAppContainer","setApp","urlParams","redirectTarget","encodeURIComponent","pathname","NewApp","OAuthError","App","exact","path","i18next","init","interpolation","escapeValue","lng","resources","en","common","common_en","no","common_no","ReactDOM","render","StrictMode","I18nextProvider","i18n","document","getElementById"],"mappings":"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","file":"static/js/main.841afb35.chunk.js","sourcesContent":["const checkTokenData = async () => {\r\n    const response = await fetch(`/api/token-data`, {\r\n        method: \"GET\",\r\n        credentials: \"same-origin\"\r\n    });\r\n    if (!response.ok) {\r\n        return {};\r\n    }\r\n    return await response.json();\r\n};\r\n\r\nexport {checkTokenData};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {checkTokenData} from \"../../services/tokenDataService\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\nfunction Home() {\r\n    const history = useHistory();\r\n    const {t} = useTranslation(\"common\");\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [email, setEmail] = useState();\r\n\r\n    useEffect(() => {\r\n        checkTokenData().then(response => {\r\n            if (response.email) {\r\n                setEmail(response.email);\r\n                setLoading(false);\r\n            } else {\r\n                history.push(\"/login\");\r\n            }\r\n        });\r\n    }, [history]);\r\n\r\n    if (!isLoading) {\r\n        return <div>\r\n            <Typography variant=\"h5\" align=\"center\">{t(\"home.logged-in-as\")} <b>{email}</b></Typography>\r\n        </div>;\r\n    } else {\r\n        return <Typography variant=\"h6\" align=\"center\">{t(\"global.loading\")}</Typography>;\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import {Container, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    title: {\r\n        backgroundColor: \"#ffeddd\",\r\n        paddingTop: 50,\r\n        paddingBottom: 50,\r\n        marginBottom: 10\r\n    }\r\n}));\r\n\r\nconst Title = ({title}) => {\r\n    const classes = useStyles();\r\n\r\n    return <div className={classes.title}>\r\n        <Container>\r\n            <Typography variant=\"h3\" align=\"center\">{title}</Typography>\r\n        </Container>\r\n    </div>;\r\n};\r\n\r\nexport default Title;\r\n","const loginFactorOne = async credentials => {\r\n    const response = await fetch(\"/api/login/factor-one\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(credentials)\r\n    });\r\n    return await response.json();\r\n};\r\n\r\nexport {loginFactorOne};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {loginFactorOne} from \"../../services/loginFactorOneService\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction LoginFactorOne({onLogin}) {\r\n    const history = useHistory();\r\n    const {t} = useTranslation(\"common\");\r\n\r\n    const [credentials, setCredentials] = useState({email: \"\", password: \"\"});\r\n    const [fieldErrors, setFieldErrors] = useState({});\r\n\r\n    const handleCredentialsChange = event => {\r\n        setCredentials({...credentials, [event.target.id]: event.target.value});\r\n    };\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        setFieldErrors({});\r\n\r\n        const response = await loginFactorOne(credentials);\r\n\r\n        if (response.errors) {\r\n            setFieldErrors({\r\n                email: response.errors[\"email\"],\r\n                password: response.errors[\"password\"],\r\n                global: response.errors[\"global\"]\r\n            });\r\n            return;\r\n        }\r\n\r\n        onLogin(response.basicToken);\r\n    };\r\n\r\n    const handleRegister = () => {\r\n        history.push(\"/register\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <TextField id=\"email\" type=\"email\" label={t(\"login.email\")} variant=\"outlined\" fullWidth={true}\r\n                               value={credentials.email} onChange={handleCredentialsChange}\r\n                               error={fieldErrors.email !== undefined} helperText={t(fieldErrors.email)}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField id=\"password\" type=\"password\" label={t(\"login.password\")} variant=\"outlined\" fullWidth={true}\r\n                               value={credentials.password} onChange={handleCredentialsChange}\r\n                               error={fieldErrors.password !== undefined} helperText={t(fieldErrors.password)}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Button type=\"submit\" color=\"primary\" size=\"large\" variant=\"contained\" fullWidth={true}>\r\n                        {t(\"login.login\")}\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Alert severity=\"error\" className={!fieldErrors.global ? \"Hide\" : \"\"}>\r\n                        {t(fieldErrors.global)}\r\n                    </Alert>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleRegister}>{t(\"login.register-user\")}</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>);\r\n}\r\n\r\nexport default LoginFactorOne;\r\n","const loginFactorTwo = async (credentials, basicToken) => {\r\n    const response = await fetch(\"/api/login/factor-two\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${basicToken}`\r\n        },\r\n        body: JSON.stringify(credentials)\r\n    });\r\n    if (!response.ok) {\r\n        return await response.json();\r\n    }\r\n    return {};\r\n};\r\n\r\nexport {loginFactorTwo};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {loginFactorTwo} from \"../../services/loginFactorTwoService\";\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\nfunction LoginFactorTwo({basicToken, onLogin}) {\r\n    const {t} = useTranslation(\"common\");\r\n\r\n    const [credentials, setCredentials] = useState({code: \"\"});\r\n    const [fieldErrors, setFieldErrors] = useState({});\r\n\r\n    const handleCredentialsChange = event => {\r\n        setCredentials({...credentials, [event.target.id]: event.target.value});\r\n    };\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        setFieldErrors({});\r\n\r\n        const response = await loginFactorTwo(credentials, basicToken);\r\n\r\n        if (response.errors) {\r\n            setFieldErrors({\r\n                code: response.errors[\"code\"],\r\n                global: response.errors[\"global\"]\r\n            });\r\n            return;\r\n        }\r\n\r\n        onLogin();\r\n    };\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"body1\" align=\"center\">{t(\"login.two-factor-desc\")}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField id=\"code\" type=\"code\" label={t(\"login.code\")} variant=\"outlined\" fullWidth={true}\r\n                           value={credentials.code} onChange={handleCredentialsChange}\r\n                           error={fieldErrors.code !== undefined} helperText={t(fieldErrors.code)}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Button type=\"submit\" color=\"primary\" size=\"large\" variant=\"contained\" fullWidth={true}>\r\n                    {t(\"login.verify-code\")}\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Alert severity=\"error\" className={!fieldErrors.global ? \"Hide\" : \"\"}>\r\n                    {t(fieldErrors.global)}\r\n                </Alert>\r\n            </Grid>\r\n        </Grid>\r\n    </form>;\r\n}\r\n\r\nexport default LoginFactorTwo;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport LoginFactorOne from \"./LoginFactorOne\";\r\nimport LoginFactorTwo from \"./LoginFactorTwo\";\r\nimport {checkTokenData} from \"../../services/tokenDataService\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nfunction LoginContainer() {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const {t} = useTranslation(\"common\");\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [basicToken, setBasicToken] = useState();\r\n    const [redirect, setRedirect] = useState(null);\r\n\r\n    useEffect(() => {\r\n        checkTokenData().then(response => {\r\n            if (response.email) {\r\n                history.push(\"/\");\r\n            } else {\r\n                const encodedRedirect = new URLSearchParams(location.search).get(\"redirect\");\r\n                if (encodedRedirect) {\r\n                    setRedirect(decodeURIComponent(encodedRedirect));\r\n                }\r\n                setLoading(false);\r\n            }\r\n        });\r\n    }, [history, location]);\r\n\r\n    const handleLoginFactorOne = basicToken => setBasicToken(basicToken);\r\n\r\n    const handleLoginFactorTwo = () => {\r\n        if (redirect) {\r\n            history.push(redirect);\r\n        } else {\r\n            history.push(\"/\");\r\n        }\r\n    };\r\n\r\n    if (!isLoading) {\r\n        return <div>\r\n            {!basicToken && <LoginFactorOne onLogin={handleLoginFactorOne}/>}\r\n            {basicToken && <LoginFactorTwo basicToken={basicToken} onLogin={handleLoginFactorTwo}/>}\r\n        </div>;\r\n    } else {\r\n        return <Typography variant=\"h6\" align=\"center\">{t(\"global.loading\")}</Typography>;\r\n    }\r\n}\r\n\r\nexport default LoginContainer;\r\n","import React from \"react\";\r\nimport {Container, Grid, Typography} from \"@material-ui/core\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport LoginContainer from \"../../components/login/LoginContainer\";\r\n\r\nfunction Login() {\r\n    const {t} = useTranslation(\"common\");\r\n\r\n    return <Container maxWidth=\"sm\">\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\" align=\"center\">{t(\"login.title\")}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <LoginContainer/>\r\n            </Grid>\r\n        </Grid>\r\n    </Container>;\r\n}\r\n\r\nexport default Login;\r\n","const registerUser = async credentials => {\r\n    const response = await fetch(\"/api/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(credentials)\r\n    });\r\n    return await response.json();\r\n};\r\n\r\nexport {registerUser};\r\n","import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Grid, TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {registerUser} from \"../../services/registerUserService\";\r\n\r\nfunction RegisterUser({onRegister}) {\r\n    const {t} = useTranslation(\"common\");\r\n    const history = useHistory();\r\n\r\n    const [credentials, setCredentials] = React.useState({email: \"\", password: \"\", confirmedPassword: \"\"});\r\n    const [fieldErrors, setFieldErrors] = React.useState({});\r\n\r\n    const handleCredentialsChange = event => {\r\n        setCredentials({...credentials, [event.target.id]: event.target.value});\r\n    };\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        setFieldErrors({});\r\n\r\n        const response = await registerUser(credentials);\r\n\r\n        if (response.errors) {\r\n            setFieldErrors({\r\n                email: response.errors[\"email\"],\r\n                password: response.errors[\"password\"],\r\n                confirmedPassword: response.errors[\"confirmedPassword\"]\r\n            });\r\n            return;\r\n        }\r\n\r\n        onRegister(response);\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        history.push(\"/login\");\r\n    };\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <TextField id=\"email\" type=\"email\" label={t(\"register.email\")} variant=\"outlined\" fullWidth={true}\r\n                           value={credentials.email} onChange={handleCredentialsChange}\r\n                           error={fieldErrors.email !== undefined}\r\n                           helperText={t(fieldErrors.email)}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField id=\"password\" type=\"password\" label={t(\"register.password\")} variant=\"outlined\"\r\n                           fullWidth={true}\r\n                           value={credentials.password} onChange={handleCredentialsChange}\r\n                           error={fieldErrors.password !== undefined}\r\n                           helperText={t(fieldErrors.password)}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField id=\"confirmedPassword\" type=\"password\" label={t(\"register.confirm-password\")}\r\n                           variant=\"outlined\" fullWidth={true}\r\n                           value={credentials.confirmedPassword} onChange={handleCredentialsChange}\r\n                           error={fieldErrors.confirmedPassword !== undefined}\r\n                           helperText={t(fieldErrors.confirmedPassword)}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Button type=\"submit\" color=\"primary\" size=\"large\" variant=\"contained\" fullWidth={true}>\r\n                    {t(\"register.register\")}\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={handleLogin}>{t(\"register.login\")}</Button>\r\n            </Grid>\r\n        </Grid>\r\n    </form>;\r\n}\r\n\r\nexport default RegisterUser;\r\n","const registerTotp = async (credentials, registeredToken) => {\r\n    const response = await fetch(\"/api/register/totp-setup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${registeredToken}`\r\n        },\r\n        body: JSON.stringify(credentials)\r\n    });\r\n    if (!response.ok) {\r\n        return await response.json();\r\n    }\r\n    return {};\r\n};\r\n\r\nexport {registerTotp};\r\n","import React from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {registerTotp} from \"../../services/registerTotpService\";\r\n\r\nfunction RegisterTotp({registeredData, onRegister}) {\r\n    const {t} = useTranslation(\"common\");\r\n\r\n    const [credentials, setCredentials] = React.useState({code: \"\"});\r\n    const [fieldErrors, setFieldErrors] = React.useState({});\r\n\r\n    const handleCredentialsChange = event => {\r\n        setCredentials({...credentials, [event.target.id]: event.target.value});\r\n    };\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        setFieldErrors({});\r\n\r\n        const response = await registerTotp(credentials, registeredData.registeredToken);\r\n        if (response.errors) {\r\n            setFieldErrors({\r\n                global: response.errors[\"global\"],\r\n                code: response.errors[\"code\"]\r\n            });\r\n        }\r\n\r\n        onRegister();\r\n    };\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={3} alignContent=\"center\">\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h5\">1. {t(\"register.download-title\")}</Typography>\r\n                <Typography variant=\"body1\">{t(\"register.download-desc\")}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h5\">2. {t(\"register.qr-title\")}</Typography>\r\n                <Typography variant=\"body1\">{t(\"register.qr-desc\")}</Typography>\r\n                <img src={registeredData.qrCodeUrl} alt={t(\"register.qr-image-alt\")}/>\r\n                <Typography variant=\"body1\">\r\n                    {t(\"register.secret-prefix\")}<b>{registeredData.totpSecretKey}</b> {t(\"register.secret-suffix\")}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h5\">3. {t(\"register.verify-title\")}</Typography>\r\n                <Typography variant=\"body1\">{t(\"register.verify-desc\")}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField id=\"code\" type=\"text\" label={t(\"register.code\")} variant=\"outlined\" fullWidth={true}\r\n                           value={credentials.code} onChange={handleCredentialsChange}\r\n                           error={fieldErrors.code !== undefined} helperText={t(fieldErrors.code)}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Button type=\"submit\" color=\"primary\" size=\"large\" variant=\"contained\" fullWidth={true}>\r\n                    {t(\"register.verify-code\")}\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Alert severity=\"error\" className={!fieldErrors.global ? \"Hide\" : \"\"}>\r\n                    {t(fieldErrors.global)}\r\n                </Alert>\r\n            </Grid>\r\n        </Grid>\r\n    </form>;\r\n}\r\n\r\nexport default RegisterTotp;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {checkTokenData} from \"../../services/tokenDataService\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport RegisterUser from \"./RegisterUser\";\r\nimport RegisterTotp from \"./RegisterTotp\";\r\n\r\nfunction RegisterContainer() {\r\n    const history = useHistory();\r\n    const {t} = useTranslation(\"common\");\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [registeredData, setRegisteredData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        checkTokenData().then(response => {\r\n            if (response.email) {\r\n                history.push(\"/\");\r\n            } else {\r\n                setLoading(false);\r\n            }\r\n        });\r\n    }, [history]);\r\n\r\n    const handleRegisterUser = registeredData => setRegisteredData({\r\n        registeredToken: registeredData.registeredToken,\r\n        qrCodeUrl: registeredData.qrCodeUrl,\r\n        totpSecretKey: registeredData.totpSecretKey\r\n    });\r\n\r\n    const handleRegisterTotp = () => history.push(\"/\");\r\n\r\n    if (!isLoading) {\r\n        return <div>\r\n            {!registeredData && <RegisterUser onRegister={handleRegisterUser}/>}\r\n            {registeredData && <RegisterTotp registeredData={registeredData} onRegister={handleRegisterTotp}/>}\r\n        </div>;\r\n    } else {\r\n        return <Typography variant=\"h6\" align=\"center\">{t(\"global.loading\")}</Typography>;\r\n    }\r\n}\r\n\r\nexport default RegisterContainer;\r\n","import React from \"react\";\r\nimport {Container, Grid, Typography} from \"@material-ui/core\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport RegisterContainer from \"../../components/register/RegisterContainer\";\r\n\r\nfunction Register() {\r\n    const {t} = useTranslation(\"common\");\r\n\r\n    return <Container maxWidth=\"sm\">\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\" align=\"center\">{t(\"register.title\")}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <RegisterContainer/>\r\n            </Grid>\r\n        </Grid>\r\n    </Container>;\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Delete, KeyboardArrowRight} from \"@material-ui/icons\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {List} from \"@material-ui/core\";\r\n\r\nfunction AppsList({apps}) {\r\n    const {t} = useTranslation(\"common\");\r\n\r\n    return <List>\r\n        {apps.map(app => <ListItem key={app.clientId}>\r\n            <ListItemIcon>\r\n                <KeyboardArrowRight/>\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={app.name}\r\n                secondary={`${t(\"apps.authorized\")} ${new Date(app.authorizedTime).toLocaleString()}`}\r\n            />\r\n            <ListItemSecondaryAction>\r\n                <IconButton id={app.clientId} edge=\"end\" aria-label=\"delete\">\r\n                    <Delete/>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>)}\r\n    </List>;\r\n}\r\n\r\nexport default AppsList;\r\n","const getConnectedApps = async () => {\r\n    const response = await fetch(`/api/connected-app`, {\r\n        method: \"GET\",\r\n        credentials: \"same-origin\"\r\n    });\r\n    if (!response.ok) {\r\n        return;\r\n    }\r\n    return await response.json();\r\n};\r\n\r\nexport {getConnectedApps};\r\n","const getAppName = async (clientId) => {\r\n    const response = await fetch(`/api/app/${clientId}`, {\r\n        method: \"GET\",\r\n        credentials: \"same-origin\"\r\n    });\r\n    if (!response.ok) {\r\n        return;\r\n    }\r\n    return await response.json();\r\n};\r\n\r\nexport {getAppName};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport AppsList from \"./AppsList\";\r\nimport {getConnectedApps} from \"../../services/connectedAppService\";\r\nimport {getAppName} from \"../../services/appService\";\r\n\r\nfunction AppsContainer() {\r\n    const {t} = useTranslation(\"common\");\r\n    const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [apps, setApps] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getConnectedApps().then(response => {\r\n            if (!response) {\r\n                history.push(\"/login\");\r\n                return;\r\n            }\r\n            Promise.all(response.map(async app => {\r\n                const nameResponse = await getAppName(app.clientId);\r\n                return {...app, name: nameResponse.name};\r\n            })).then(appsWithName => {\r\n                setApps(appsWithName);\r\n                setLoading(false);\r\n            });\r\n        });\r\n    }, [history]);\r\n\r\n    if (!isLoading) {\r\n        return <AppsList apps={apps}/>;\r\n    } else {\r\n        return <Typography variant=\"h6\" align=\"center\">{t(\"global.loading\")}</Typography>;\r\n    }\r\n}\r\n\r\nexport default AppsContainer;\r\n","import React from \"react\";\r\nimport {Container, Grid, Typography} from \"@material-ui/core\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport AppsContainer from \"../../components/apps/AppsContainer\";\r\n\r\nfunction Apps() {\r\n    const {t} = useTranslation(\"common\");\r\n\r\n    return <Container maxWidth=\"sm\">\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\" align=\"center\">{t(\"apps.title\")}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <AppsContainer/>\r\n            </Grid>\r\n        </Grid>\r\n    </Container>;\r\n}\r\n\r\nexport default Apps;\r\n","import React from \"react\";\r\nimport {Button, Grid, List, ListItem, ListItemIcon, ListItemText, Typography} from \"@material-ui/core\";\r\nimport {KeyboardArrowRight} from \"@material-ui/icons\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nfunction AuthorizeForm({app}) {\r\n    const {t} = useTranslation(\"common\");\r\n\r\n    const handleAuthorize = () => {\r\n        window.location.href = `/api/oauth/authorize?client_id=${app.clientId}&response_type=code&redirect_uri=${app.redirectUri}&scope=${app.scopeId}`;\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        window.location.href = app.redirectUri;\r\n    };\r\n\r\n    return <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n            <Typography variant=\"body1\">{t(\"new-app.desc\")}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <List>\r\n                <ListItem key={app.clientId}>\r\n                    <ListItemIcon>\r\n                        <KeyboardArrowRight/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={app.name} secondary={`${t(\"new-app.permission\")}: ${app.scopeId}`}/>\r\n                </ListItem>\r\n            </List>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleAuthorize}>\r\n                        {t(\"new-app.authorize\")}\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Button variant=\"contained\" color=\"secondary\" fullWidth onClick={handleCancel}>\r\n                        {t(\"new-app.cancel\")}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    </Grid>;\r\n}\r\n\r\nexport default AuthorizeForm;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {getAppName} from \"../../services/appService\";\r\nimport AuthorizeForm from \"./authorize-form/AuthorizeForm\";\r\nimport {checkTokenData} from \"../../services/tokenDataService\";\r\n\r\nfunction NewAppContainer() {\r\n    const {t} = useTranslation(\"common\");\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [app, setApp] = useState(null);\r\n\r\n    useEffect(() => {\r\n        checkTokenData().then(response => {\r\n            if (!response.email) {\r\n                const redirectTarget = encodeURIComponent(`${location.pathname}${location.search}`);\r\n                history.push(`/login?redirect=${redirectTarget}`);\r\n                return;\r\n            }\r\n            const urlParams = new URLSearchParams(location.search);\r\n            const clientId = urlParams.get(\"client_id\");\r\n            const redirectUri = urlParams.get(\"redirect_uri\");\r\n            const scopeId = urlParams.get(\"scope\");\r\n            getAppName(clientId).then(response => {\r\n                if (!response) {\r\n                    history.push(\"/oauth-error?error=invalid-client-id\");\r\n                    return;\r\n                }\r\n                setApp({\r\n                    clientId: clientId,\r\n                    name: response.name,\r\n                    redirectUri: redirectUri,\r\n                    scopeId: scopeId\r\n                });\r\n                setLoading(false);\r\n            });\r\n        });\r\n    }, [history, location]);\r\n\r\n    if (!isLoading) {\r\n        return <AuthorizeForm app={app}/>;\r\n    } else {\r\n        return <Typography variant=\"h6\" align=\"center\">{t(\"global.loading\")}</Typography>;\r\n    }\r\n}\r\n\r\nexport default NewAppContainer;\r\n","import React from \"react\";\r\nimport {Container, Grid, Typography} from \"@material-ui/core\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport NewAppContainer from \"../../../components/new-app/NewAppContainer\";\r\n\r\nfunction NewApp() {\r\n    const {t} = useTranslation(\"common\");\r\n\r\n    return <Container maxWidth=\"sm\">\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\" align=\"center\">{t(\"new-app.title\")}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <NewAppContainer/>\r\n            </Grid>\r\n        </Grid>\r\n    </Container>;\r\n}\r\n\r\nexport default NewApp;\r\n","import React from \"react\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\n\r\nfunction OAuthError() {\r\n    const {t} = useTranslation(\"common\");\r\n    const location = useLocation();\r\n    const error = new URLSearchParams(location.search).get(\"error\");\r\n\r\n    return <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n            <Typography variant=\"h4\" align=\"center\">{t(`oauth-error.title`)}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Typography variant=\"body1\" align=\"center\">{t(`oauth-error.${error}`)}</Typography>\r\n        </Grid>\r\n    </Grid>;\r\n\r\n}\r\n\r\nexport default OAuthError;\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Home from \"./routes/home/Home\";\r\nimport Title from \"./components/Title\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Login from \"./routes/login/Login\";\r\nimport \"./App.css\";\r\nimport Register from \"./routes/register/Register\";\r\nimport Apps from \"./routes/apps/Apps\";\r\nimport NewApp from \"./routes/apps/new/NewApp\";\r\nimport OAuthError from \"./routes/oauth-error/OAuthError\";\r\n\r\nfunction App() {\r\n    const {t} = useTranslation(\"common\");\r\n\r\n    return <div>\r\n        <Title title={t(\"title\")}/>\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Home/>\r\n                </Route>\r\n                <Route exact path=\"/login\">\r\n                    <Login/>\r\n                </Route>\r\n                <Route exact path=\"/register\">\r\n                    <Register/>\r\n                </Route>\r\n                <Route exact path=\"/apps\">\r\n                    <Apps/>\r\n                </Route>\r\n                <Route exact path=\"/apps/new\">\r\n                    <NewApp/>\r\n                </Route>\r\n                <Route exact path=\"/oauth-error\">\r\n                    <OAuthError/>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    </div>;\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport i18next from \"i18next\";\r\nimport {I18nextProvider} from \"react-i18next\";\r\nimport common_en from \"./translations/en/common.json\";\r\nimport common_no from \"./translations/no/common.json\";\r\n\r\ni18next.init({\r\n    interpolation: {escapeValue: false}, // React already does escaping\r\n    lng: \"no\",\r\n    resources: {\r\n        en: {\r\n            common: common_en\r\n        },\r\n        no: {\r\n            common: common_no\r\n        }\r\n    }\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <I18nextProvider i18n={i18next}>\r\n            <App/>\r\n        </I18nextProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}